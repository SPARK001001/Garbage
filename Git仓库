一、
1.创建代码仓库
	git config --global user.name "ben99"
	git config --global user.email "2581212192@qq.com"

2.创建项目，打开Git bash 在工程目录下git init 创建本地代码仓库

3.提交本地代码
	git add readme.txt
	git commit -m "Wrote a readme file"

	git add. 可以一次添加全部
	可以在代码仓库的根目录下创建一个名为 .gitignore 的文件，编辑里面的内容把不需要的文件忽略掉如：
		/gen/
		/bin/ 
		project.properties

4.查看修改内容 git add 后修改
	git status 可以查看修改的部分
	git diff 可以查看具体改了什么 按q退回命令行

5.查看提交记录
	git log

6.撤销未提交的修改
	修改文件但还没 git add
		git diff 看到修改的内容
		git checkout readme.txt 把改的内容删除了
	已经add了
		git reset HEAD 文件路径（readme.txt）
		git checkout readme.txt

7.版本回退
	git log 查看提交记录，获取版本号，前7位就可以。HEAD 代表当前版本，上一版本HEAD^ ,在上一个版本HEAD^^
	git reset --hard HEAD
	git reset --hard HEAD^
	git log

	也可以直接
		git reset --hard ad2080c(版本号)
		回退新版本git log z找不到记录，用git reflog

二、
1.创建与合并分支
	git checkout -b dev  //创建dev分支,然后切换到dev分支
		相当于
			git branch dev 
			git checkout dev
	git branch 命令查看当前分支，列出所有分支，当前分支用*表示
	提交：
		git add readme.txt
		git commit -m "branch test"
	dev分支工作完成，切换回master分支
		git checkout master
	dev 分支工作成果合并到master分支
		git merge dev
	合并完成后，放心删除dev分支
		git branch -d dev
Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

三、使用Github搭建远程仓库
	clone代码库到本地 git clone https://github.com/SPARK001001/Garbage.git
	一顿操作。。。
	本地仓库与远程仓库同步 git push origin master 或git push
	服务器同步到本地 git pull
